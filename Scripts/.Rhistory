rm(list=ls())
library("vegan")
library("tidyverse")
library(here)
da <- read.csv("Data/2021_09_20/bs_data/da2018.csv")
taxa <- read.csv("Data/2021_09_20/bs_data/species_codes.csv")
bs_wide <- gather(bs_spec)
da <- read.csv("Data/2021_09_20/bs_data/da2018.csv")
da <- read.csv("./Data/2021_09_20/bs_data/da2018.csv")
taxa <- read.csv("Data/2021_09_20/bs_data/species_codes.csv")
library(here)
da <- read.csv("Data/2021_09_20/bs_data/da2018.csv")
library(here)
library(lubridate)
library(vegan)
library(tidyverse)
#format data for NMDS
mate <- readRDS("Data/2021_09_20/derived_data/lcabysitesurvey_matrix.rds")
matb <- readRDS("Data/2021_09_20/derived_data/bs_lcamatrix.rds")
sse <- readRDS("Data/2021_09_20/derived_data/sitesurvey_data.rds")
sse <- column_to_rownames(sse, "surveyID")
ssb <- readRDS("Data/2021_09_20/derived_data/bs_surveydata.rds")
ssb <- column_to_rownames(ssb, "surveyID")
taxe <- readRDS("Data/2021_09_20/derived_data/taxa_eDNA.rds")
taxb <- readRDS("Data/2021_09_20/derived_data/taxa_BS.rds")
taxe_filter <- filter(taxe, class == "Actinopterygii" | class == "Holocephali")
#create genus by site matrix
genmate <- t(mate) %>%
as.data.frame() %>%
rownames_to_column(var = "lca_taxon")  %>%
merge(taxe, ., by = "lca_taxon", all.y = T) %>% # lose 5 ASVs that don't have assignment
drop_na(kingdom) %>%
.[c(7, 21:ncol(.))] %>%
group_by(genus) %>%
summarise_all(sum) %>%
filter(!is.na(.$genus)) %>%
column_to_rownames("genus") %>%
t() %>%
as.data.frame()
genmatb <- t(matb) %>%
as.data.frame() %>%
rownames_to_column(var = "lca_taxon")  %>%
merge(taxb, ., by = "lca_taxon", all.y = T) %>%
drop_na(kingdom) %>%
.[c(7, 21:ncol(.))] %>%
group_by(genus) %>%
summarise_all(sum) %>%
filter(!is.na(.$genus)) %>%
column_to_rownames("genus") %>%
t() %>%
as.data.frame()
# try using read index
#create read index
##read in functions
#index from (Jacobs-Palmer et. al., 2020)
#Take proportions from table of raw read counts with families/OTUs in rows, samples in columns
PROP <- function(df) {sweep(df, MARGIN=2, colSums(df), FUN="/")}
#Take indices using a table with proportions of reads with families/OTUs in rows, samples in columns
INDEX <- function(df) {sweep(df, MARGIN=1, STATS=apply(df, MARGIN = 1, max), FUN="/")}
genmate <- genmate %>%
t() %>% as.data.frame() %>%
PROP() %>%
INDEX() %>%
t() %>% as.data.frame()
genmatb <- genmatb %>%
t() %>% as.data.frame() %>%
PROP() %>%
INDEX() %>%
t() %>% as.data.frame()
ssmate <- cbind(sse, genmate)
ssmatb <- cbind(ssb, genmatb)
#format date (make columns for year, month and day) and filter for beach seining
ssmate <- ssmate %>%
dplyr::mutate(year = lubridate::year(date),
month = lubridate::month(date),
day = lubridate::day(date)) %>%
relocate(month, .after = year) %>%
relocate(day, .after = month) %>%
mutate(method = "eDNA")%>%
relocate(method, .after = day)%>%
rename(site = location)
ssmatb <- ssmatb %>%
mutate(method = "beach_seine") %>%
relocate(method, .after = day) %>%
mutate(hakai_project = "beach_seine") %>%
relocate(hakai_project, .after = day) %>%
mutate(experiment = "bottom") %>%
relocate(experiment, .after = method) %>%
filter(year == 2018 | year == 2019 | year == 2020) %>%
filter(site != "fei3" & site != "fei4" & site != "ris1" & site != "ris3")
# all genera matrix
longe <- gather(ssmate, lca_taxon, abundance, c(20:ncol(ssmate)))
library(here)
library(lubridate)
library(vegan)
library(tidyverse)
#format data for NMDS
mate <- readRDS("Data/2021_09_20/derived_data/lcabysitesurvey_matrix.rds")
matb <- readRDS("Data/2021_09_20/derived_data/bs_lcamatrix.rds")
library(seqinr)
seqs <- read.fasta("Data/2021_09_20/12S_ASV_sequences.length_var.merged_dataset.fasta")
library(tidyverse)
library(lubridate)
library(here)
library(lme4)
mate <- readRDS("Data/2021_09_20/derived_data/lcabysitesurvey_matrix.rds")
matb <- readRDS("Data/2021_09_20/derived_data/bs_lcamatrix.rds")
sse <- readRDS("Data/2021_09_20/derived_data/sitesurvey_data.rds")
sse <- column_to_rownames(sse, "surveyID")
ssb <- readRDS("Data/2021_09_20/derived_data/bs_surveydata.rds")
ssb <- column_to_rownames(ssb, "surveyID")
taxe <- readRDS("Data/2021_09_20/derived_data/taxa_eDNA.rds")
taxb <- readRDS("Data/2021_09_20/derived_data/taxa_BS.rds")
#filter our non-fish
taxe_filter <- filter(taxe, class == "Actinopterygii" | class == "Holocephali")
#create link date in ssb
ssb$hakai_link_date <- with(ssb, ymd(paste(year, month, day, sep= ' ')))
#make new columns for subsetting data
ssb <- ssb %>%
mutate(method = "beach_seine") %>%
relocate(method, .after = day) %>%
mutate(hakai_project = "beach_seine") %>%
relocate(hakai_project, .after = day) %>%
mutate(experiment = "bottom") %>%
.[c(1,5:8)] %>%
mutate(date = hakai_link_date)
sse <- sse %>%
mutate(method = "eDNA")%>%
relocate(method, .after = date) %>%
.[c(1,3:6,8)] %>%
rename("site" = "location")
survey_data <- rbind(sse,ssb)
#create unique id for each site-date combination linking ssb to sse
survey_data$link <- as.numeric(factor(paste0(survey_data$site, survey_data$hakai_link_date)))
survey_data <- survey_data %>%
mutate(link = paste("lnk", link, sep = "")) %>%
rownames_to_column(., var = "survey_link")
#split survey data by methid
ssb <- survey_data %>%
filter(method == "beach_seine")
sse <- survey_data %>%
filter(method == "eDNA")
#create read index
##read in functions
#index from (Jacobs-Palmer et. al., 2020)
#Take proportions from table of raw read counts with families/OTUs in rows, samples in columns
PROP <- function(df) {sweep(df, MARGIN=2, colSums(df), FUN="/")}
#Take indices using a table with proportions of reads with families/OTUs in rows, samples in columns
INDEX <- function(df) {sweep(df, MARGIN=1, STATS=apply(df, MARGIN = 1, max), FUN="/")}
t1 <- mate %>%
t() %>% as.data.frame() %>%
PROP() %>%
INDEX() %>%
t() %>% as.data.frame()
t2 <- matb %>%
t() %>% as.data.frame() %>%
PROP() %>%
INDEX() %>%
t() %>% as.data.frame()
genmate <- t(t1) %>%
as.data.frame() %>%
rownames_to_column(var = "lca_taxon")  %>%
merge(taxe, ., by = "lca_taxon", all.y = T) %>% # lose 5 ASVs that don't have assignment
drop_na(kingdom) %>%
.[c(7, 21:ncol(.))] %>%
group_by(genus) %>%
summarise_all(sum) %>%
filter(!is.na(.$genus)) %>%
column_to_rownames("genus") %>%
t() %>%
as.data.frame()
genmatb <- t(matb) %>%
as.data.frame() %>%
rownames_to_column(var = "lca_taxon")  %>%
merge(taxb, ., by = "lca_taxon", all.y = T) %>%
drop_na(kingdom) %>%
.[c(7, 21:ncol(.))] %>%
group_by(genus) %>%
summarise_all(sum) %>%
filter(!is.na(.$genus)) %>%
column_to_rownames("genus") %>%
t() %>%
as.data.frame()
bs_genera <- colnames(genmatb)
eDNA_genera <- colnames(genmate)
shared_genera <- bs_genera[bs_genera %in% eDNA_genera]
b1 <- genmatb[c(shared_genera)]
e1 <- genmate[c(shared_genera)]
#merge with survey data
ssmate <- cbind(sse, genmate)
ssmatb <- cbind(ssb, genmatb)
#make long and remove unwanted columns
longe <- ssmate %>%
gather(., genus, abundance, c(9:ncol(.))) %>%
.[c(1,2,5, 8:10)] %>%
rename(., "read_index" = "abundance")
longb <- ssmatb %>%
gather(., genus, abundance, c(9:ncol(.))) %>%
.[c(1,2, 5, 8:10)]
long <- merge(longb, longe, by=c("link","genus"))
long_exp <- long %>%
mutate(abundance = abundance + 0.0001)
#try individual genera
filter <- filter(long, genus == "Leptocottus")
filter <- filter(long, genus == "Ammodytes")
filter <- filter(long, genus == "Cymatogaster")
filter <- filter(long, genus == "Enophrys")
filter <- filter(long, genus == "Hexagrammos")
filter <- filter(long, genus == "Ophiodon")
ggplot(filter, aes(x = abundance, y = read_index)) +
geom_point() +
scale_x_continuous(trans = "log10") +
theme_classic() +
labs(title = "read index(eDNA) against abundance(beach seine) ")
#model <- lmer(long$read_index ~ (1 + long$abundance|long$genus))
#model <- lmer(long$read_index ~ (1 + long$abundance|long$genus))
#summary(model)
#model <- lmer(long$read_index ~ (1 + long$abundance|long$genus))
#summary(model)
#model <- lmer(long$read_index ~ (1 + long$abundance|long$genus))
#summary(model)
#model <- lmer(long$read_index ~ (1 + long$abundance|long$genus))
#summary(model)
#model <- lmer(long$read_index ~ (1 + long$abundance|long$genus))
#summary(model)
#model <- lmer(long$read_index ~ (1 + long$abundance|long$genus))
#summary(model)
#model <- lmer(long$read_index ~ (1 + long$abundance|long$genus))
#summary(model)
#model <- lmer(long$read_index ~ (1 + long$abundance|long$genus))
#summary(model)
ggplot(filter, aes(x = abundance, y = read_index)) +
geom_point() +
scale_x_continuous(trans = "log10") +
theme_classic() +
labs(title = "read index(eDNA) against abundance(beach seine) ")
#try individual genera
filter <- filter(long, genus == "Leptocottus")
mate <- readRDS("Data/2021_09_20/derived_data/lcabysitesurvey_matrix.rds")
matb <- readRDS("Data/2021_09_20/derived_data/bs_lcamatrix.rds")
sse <- readRDS("Data/2021_09_20/derived_data/sitesurvey_data.rds")
sse <- column_to_rownames(sse, "surveyID")
